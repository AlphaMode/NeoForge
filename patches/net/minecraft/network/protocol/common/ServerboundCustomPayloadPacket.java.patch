--- a/net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket.java
+++ b/net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket.java
@@ -2,6 +_,9 @@
 
 import com.google.common.collect.ImmutableMap;
 import java.util.Map;
+
+import io.netty.channel.ChannelHandlerContext;
+import net.minecraft.network.ConnectionProtocol;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.common.custom.BrandPayload;
@@ -12,20 +_,20 @@
 public record ServerboundCustomPayloadPacket(CustomPacketPayload payload) implements Packet<ServerCommonPacketListener> {
    private static final int MAX_PAYLOAD_SIZE = 32767;
    private static final Map<ResourceLocation, FriendlyByteBuf.Reader<? extends CustomPacketPayload>> KNOWN_TYPES = ImmutableMap.<ResourceLocation, FriendlyByteBuf.Reader<? extends CustomPacketPayload>>builder(
-         
+      
       )
-      .put(BrandPayload.ID, BrandPayload::new)
-      .build();
+     .put(BrandPayload.ID, BrandPayload::new)
+     .build();
 
-   public ServerboundCustomPayloadPacket(FriendlyByteBuf p_296108_) {
-      this(readPayload(p_296108_.readResourceLocation(), p_296108_));
+   public ServerboundCustomPayloadPacket(FriendlyByteBuf p_296108_, ChannelHandlerContext context, ConnectionProtocol protocol) {
+      this(readPayload(p_296108_.readResourceLocation(), p_296108_, context, protocol));
    }
-
-   private static CustomPacketPayload readPayload(ResourceLocation p_294367_, FriendlyByteBuf p_294321_) {
-      FriendlyByteBuf.Reader<? extends CustomPacketPayload> reader = KNOWN_TYPES.get(p_294367_);
+   
+   private static CustomPacketPayload readPayload(ResourceLocation p_294367_, FriendlyByteBuf p_294321_, ChannelHandlerContext context, ConnectionProtocol protocol) {
+      FriendlyByteBuf.Reader<? extends CustomPacketPayload> reader = net.neoforged.neoforge.network.registration.NetworkRegistry.getInstance().getReader(p_294367_, context, protocol, KNOWN_TYPES);
       return (CustomPacketPayload)(reader != null ? reader.apply(p_294321_) : readUnknownPayload(p_294367_, p_294321_));
    }
-
+   
    private static DiscardedPayload readUnknownPayload(ResourceLocation p_294973_, FriendlyByteBuf p_296037_) {
       int i = p_296037_.readableBytes();
       if (i >= 0 && i <= 32767) {
@@ -35,14 +_,15 @@
          throw new IllegalArgumentException("Payload may not be larger than 32767 bytes");
       }
    }
-
+   
    @Override
-   public void write(FriendlyByteBuf p_295621_) {
-      p_295621_.writeResourceLocation(this.payload.id());
-      this.payload.write(p_295621_);
+   public void write(FriendlyByteBuf p_295630_) {
+      p_295630_.writeResourceLocation(this.payload.id());
+      this.payload.write(p_295630_);
    }
 
    public void handle(ServerCommonPacketListener p_295862_) {
       p_295862_.handleCustomPayload(this);
    }
+   
 }
